<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.qwk.mapper.UserVipLevelMapper">
    
    <resultMap type="UserVipLevel" id="UserVipLevelResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="levelId"    column="level_id"    />
        <result property="level"    column="level"    />
        <result property="experience"    column="experience"    />
        <result property="userExperience"    column="user_experience"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectUserVipLevelVo">
        select id, user_id, level_id, level, experience, user_experience, create_by, create_time, update_by, update_time, remark from user_vip_level
    </sql>

    <select id="selectUserVipLevelList" parameterType="UserVipLevel" resultMap="UserVipLevelResult">
        <include refid="selectUserVipLevelVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="levelId != null "> and level_id = #{levelId}</if>
            <if test="level != null "> and level = #{level}</if>
            <if test="experience != null "> and experience = #{experience}</if>
            <if test="userExperience != null "> and user_experience = #{userExperience}</if>
            <if test="createBy != null  and createBy != ''"> and create_by = #{createBy}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="updateBy != null  and updateBy != ''"> and update_by = #{updateBy}</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''"> and update_time between #{params.beginUpdateTime} and #{params.endUpdateTime}</if>
        </where>
    </select>
    
    <select id="selectUserVipLevelById" parameterType="Long" resultMap="UserVipLevelResult">
        <include refid="selectUserVipLevelVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertUserVipLevel" parameterType="UserVipLevel" useGeneratedKeys="true" keyProperty="id">
        insert into user_vip_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="levelId != null">level_id,</if>
            <if test="level != null">level,</if>
            <if test="experience != null">experience,</if>
            <if test="userExperience != null">user_experience,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="levelId != null">#{levelId},</if>
            <if test="level != null">#{level},</if>
            <if test="experience != null">#{experience},</if>
            <if test="userExperience != null">#{userExperience},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateUserVipLevel" parameterType="UserVipLevel">
        update user_vip_level
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="levelId != null">level_id = #{levelId},</if>
            <if test="level != null">level = #{level},</if>
            <if test="experience != null">experience = #{experience},</if>
            <if test="userExperience != null">user_experience = #{userExperience},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserVipLevelById" parameterType="Long">
        delete from user_vip_level where id = #{id}
    </delete>

    <delete id="deleteUserVipLevelByIds" parameterType="String">
        delete from user_vip_level where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getByUserIdUserVipLevel" parameterType="Long" resultMap="UserVipLevelResult">
        <include refid="selectUserVipLevelVo"/>
        where user_id = #{userId}
    </select>



</mapper>