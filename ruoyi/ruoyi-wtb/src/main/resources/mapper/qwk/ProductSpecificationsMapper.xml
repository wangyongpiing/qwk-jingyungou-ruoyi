<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.qwk.mapper.ProductSpecificationsMapper">
    
    <resultMap type="ProductSpecifications" id="ProductSpecificationsResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="value"    column="value"    />
        <result property="createdTime"    column="CREATED_TIME"    />
        <result property="updatedBy"    column="UPDATED_BY"    />
        <result property="updatedTime"    column="UPDATED_TIME"    />
    </resultMap>

    <sql id="selectProductSpecificationsVo">
        select id, name, value, CREATED_TIME, UPDATED_BY, UPDATED_TIME from product_specifications
    </sql>

    <select id="selectProductSpecificationsList" parameterType="ProductSpecifications" resultMap="ProductSpecificationsResult">
        <include refid="selectProductSpecificationsVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="value != null  and value != ''"> and value = #{value}</if>
            <if test="createdTime != null "> and CREATED_TIME = #{createdTime}</if>
            <if test="updatedBy != null  and updatedBy != ''"> and UPDATED_BY = #{updatedBy}</if>
            <if test="updatedTime != null "> and UPDATED_TIME = #{updatedTime}</if>
        </where>
    </select>
    
    <select id="selectProductSpecificationsById" parameterType="Long" resultMap="ProductSpecificationsResult">
        <include refid="selectProductSpecificationsVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertProductSpecifications" parameterType="ProductSpecifications" useGeneratedKeys="true" keyProperty="id">
        insert into product_specifications
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="value != null and value != ''">value,</if>
            <if test="createdTime != null">CREATED_TIME,</if>
            <if test="updatedBy != null">UPDATED_BY,</if>
            <if test="updatedTime != null">UPDATED_TIME,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="value != null and value != ''">#{value},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <update id="updateProductSpecifications" parameterType="ProductSpecifications">
        update product_specifications
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="value != null and value != ''">value = #{value},</if>
            <if test="createdTime != null">CREATED_TIME = #{createdTime},</if>
            <if test="updatedBy != null">UPDATED_BY = #{updatedBy},</if>
            <if test="updatedTime != null">UPDATED_TIME = #{updatedTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProductSpecificationsById" parameterType="Long">
        delete from product_specifications where id = #{id}
    </delete>

    <delete id="deleteProductSpecificationsByIds" parameterType="String">
        delete from product_specifications where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>