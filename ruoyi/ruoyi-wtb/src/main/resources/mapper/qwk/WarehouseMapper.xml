<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.qwk.mapper.WarehouseMapper">
    
    <resultMap type="Warehouse" id="WarehouseResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="nickName"    column="nick_name"    />
        <result property="userPhone"    column="user_phone"    />
        <result property="quantity"    column="quantity"    />
        <result property="totalPrice"    column="total_price"    />
        <result property="updatedBy"    column="UPDATED_BY"    />
        <result property="updatedTime"    column="UPDATED_TIME"    />
    </resultMap>

    <sql id="selectWarehouseVo">
        select id, user_id, nick_name, user_phone, quantity, total_price, UPDATED_BY, UPDATED_TIME from warehouse
    </sql>

    <select id="selectWarehouseList" parameterType="Warehouse" resultMap="WarehouseResult">
        <include refid="selectWarehouseVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="nickName != null  and nickName != ''"> and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="userPhone != null  and userPhone != ''"> and user_phone like concat('%', #{userPhone}, '%')</if>
            <if test="quantity != null "> and quantity = #{quantity}</if>
            <if test="totalPrice != null  and totalPrice != ''"> and total_price = #{totalPrice}</if>
            <if test="updatedBy != null  and updatedBy != ''"> and UPDATED_BY = #{updatedBy}</if>
            <if test="updatedTime != null "> and UPDATED_TIME = #{updatedTime}</if>
        </where>
    </select>
    
    <select id="selectWarehouseById" parameterType="Long" resultMap="WarehouseResult">
        <include refid="selectWarehouseVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertWarehouse" parameterType="Warehouse" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER" resultType="Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into warehouse
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="nickName != null and nickName != ''">nick_name,</if>
            <if test="userPhone != null">user_phone,</if>
            <if test="quantity != null">quantity,</if>
            <if test="totalPrice != null">total_price,</if>
            <if test="updatedBy != null">UPDATED_BY,</if>
            <if test="updatedTime != null">UPDATED_TIME,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="nickName != null and nickName != ''">#{nickName},</if>
            <if test="userPhone != null">#{userPhone},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="totalPrice != null">#{totalPrice},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <update id="updateWarehouse" parameterType="Warehouse">
        update warehouse
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="userPhone != null">user_phone = #{userPhone},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="totalPrice != null">total_price = #{totalPrice},</if>
            <if test="updatedBy != null">UPDATED_BY = #{updatedBy},</if>
            <if test="updatedTime != null">UPDATED_TIME = #{updatedTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteWarehouseById" parameterType="Long">
        delete from warehouse where id = #{id}
    </delete>

    <delete id="deleteWarehouseByIds" parameterType="String">
        delete from warehouse where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectWarehouseByUserId" parameterType="Long" resultMap="WarehouseResult">
        <include refid="selectWarehouseVo"/>
        where user_id = #{id}
    </select>

    <delete id="deleteWarehouseByUserId" parameterType="Long">
        delete from warehouse where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>